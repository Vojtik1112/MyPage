document.addEventListener('DOMContentLoaded', () => {
    const preloader = document.getElementById('preloader');
    const pageWrapper = document.getElementById('page-wrapper');
    const navLinks = document.querySelectorAll('.main-nav .nav-link');
    const contentSections = document.querySelectorAll('.content-section');
    const openRequestPanelBtn = document.getElementById('open-request-panel');
    const closeRequestPanelBtn = document.getElementById('close-request-panel');
    const requestPanel = document.getElementById('request-panel');
    const panelOverlay = document.getElementById('panel-overlay');

    // --- Preloader Logic ---
    const letters = {
        c1: document.getElementById('letter-c1'),
        b: document.getElementById('letter-b'),
        d: document.getElementById('letter-d'),
        c2: document.getElementById('letter-c2'),
    };
    let animationTimeout;

    function showLetter(letterElement) {
        if (letterElement) {
            letterElement.style.animationPlayState = 'running'; // Ensure animation runs
            letterElement.classList.add('visible'); // For subtext visibility
        }
    }

    // Start animations manually for better control
    letters.c1.style.animationPlayState = 'paused';
    letters.b.style.animationPlayState = 'paused';
    letters.d.style.animationPlayState = 'paused';
    letters.c2.style.animationPlayState = 'paused';

    // Sequence the letter animations
    setTimeout(() => showLetter(letters.c1), 100); // Slight delay to start
    setTimeout(() => showLetter(letters.b), 900);
    setTimeout(() => showLetter(letters.d), 1700);
    setTimeout(() => showLetter(letters.c2), 2500);

    // Hide preloader after animations complete + extra delay
    animationTimeout = setTimeout(() => {
        preloader.classList.add('hidden');
        pageWrapper.classList.add('visible'); // Fade in main content
        // Clean up preloader from DOM after transition
        setTimeout(() => {
             if (preloader.parentNode) {
                preloader.parentNode.removeChild(preloader);
             }
        }, 800); // Match preloader transition duration
    }, 3500); // Total duration depends on last animation end time + buffer

    // Optional: Hide preloader immediately if window loads faster than animation
     window.addEventListener('load', () => {
        // You might want to ensure minimum display time for the preloader
        // For now, let the timeout handle it unless you want instant load
        // clearTimeout(animationTimeout); // Uncomment to skip animation if loaded
        // preloader.classList.add('hidden');
        // pageWrapper.classList.add('visible');
     });

    // --- Navigation Logic ---
    navLinks.forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const targetId = link.getAttribute('data-target');
            const targetSection = document.getElementById(targetId);

            if (targetSection) {
                // Deactivate all links and sections
                navLinks.forEach(l => l.classList.remove('active'));
                contentSections.forEach(s => s.classList.remove('active'));

                // Activate the clicked link and target section
                link.classList.add('active');
                targetSection.classList.add('active');
            }
        });
    });

    // --- Request Panel Logic ---
    function openPanel() {
        requestPanel.classList.add('open');
        panelOverlay.classList.add('active');
        document.body.style.overflow = 'hidden'; // Prevent background scrolling
    }

    function closePanel() {
        requestPanel.classList.remove('open');
        panelOverlay.classList.remove('active');
        document.body.style.overflow = ''; // Restore scrolling
    }

    if (openRequestPanelBtn) {
        openRequestPanelBtn.addEventListener('click', openPanel);
    }

    if (closeRequestPanelBtn) {
        closeRequestPanelBtn.addEventListener('click', closePanel);
    }

    if (panelOverlay) {
        // Close panel if overlay is clicked
        panelOverlay.addEventListener('click', closePanel);
    }

    // Optional: Close panel with Escape key
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && requestPanel.classList.contains('open')) {
            closePanel();
        }
    });

});
